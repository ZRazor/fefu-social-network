fos_user_registration_confirm_email:
    path: /confirm_email/{token}/{email}
    defaults: { _controller: NetworkUserBundle:Registration:confirmEmail }
    requirements: { _method: GET }

fos_user_change_email:
    path: /profile/change-email
    defaults: { _controller: NetworkUserBundle:ChangeEmail:changeEmail }

user_edit_contact:
    path: /profile/edit/contact
    defaults: { _controller: NetworkUserBundle:Profile:contact }

user_profile:
    path: /id{id}
    defaults: { _controller: NetworkUserBundle:Profile:profile }
    requirements:
       id: \d+

user_send_friendship_request:
    path: /friendship/send_request/{id}
    defaults: { _controller: NetworkUserBundle:Friend:sendFriendshipRequest }
    requirements:
       id: \d+

user_accept_friendship_request:
    path: /friendship/accept_request/{id}
    defaults: { _controller: NetworkUserBundle:Friend:acceptFriendshipRequest }
    requirements:
       id: \d+

user_decline_friendship_request:
    path: /friendship/decline_request/{id}
    defaults: { _controller: NetworkUserBundle:Friend:declineFriendship }
    requirements:
       id: \d+

user_delete_friendship:
    path: /friendship/delete/{id}
    defaults: { _controller: NetworkUserBundle:Friend:deleteFriendship }
    requirements:
       id: \d+

user_delete_friendship_subscribtion:
    path: /friendship/delete_subscription/{id}
    defaults: { _controller: NetworkUserBundle:Friend:deleteFriendshipSubscription }
    requirements:
       id: \d+

user_profile_friendship_requests:
    path: /profile/friendship_requests
    defaults: { _controller: NetworkUserBundle:Profile:manageFriendshipRequests }

user_profile_show_friends:
    path: /profile/friends
    defaults: { _controller: NetworkUserBundle:Profile:showProfileFriends }

user_show_friends:
    path: /id{id}/friends
    defaults: { _controller: NetworkUserBundle:Profile:showFriends }
    requirements:
       id: \d+

user_profile_show_achievements:
    path: /profile/achievements
    defaults: { _controller: NetworkUserBundle:Achievement:showProfileAchievements }

user_show_achievements:
    path: /id{id}/achievements
    defaults: { _controller: NetworkUserBundle:Achievement:showAchievements }
    requirements:
           id: \d+

user_profile_show_messages:
    path: /im
    defaults: { _controller: NetworkUserBundle:Profile:showIM }

post:
    path: /post
    defaults: { _controller: NetworkUserBundle:Profile:post }

threads:
    path: /thread_list
    defaults: { _controller: NetworkUserBundle:Profile:threadList }

thread:
    path: /thread
    defaults: { _controller: NetworkUserBundle:Profile:thread }

user_profile_show_community:
    path: profile/group
    defaults: { _controller: NetworkUserBundle:Profile:showProfileCommunity }

user_profile_community:
    path: id{id}/group
    defaults: { _controller: NetworkUserBundle:Profile:community }
    requirements:
       id: \d+
    
user_show_community:
    path: /club{id}
    defaults: { _controller: NetworkUserBundle:Profile:showCommunity }
    requirements:
       id: \d+
user_edit_community:
    path: /club{id}/edit
    defaults: { _controller: NetworkUserBundle:Profile:editCommunity }
    requirements:
       id: \d+
user_go_out_community:
    path: /community/go_out/{id}
    defaults: { _controller: NetworkUserBundle:Community:goOutCommunity }
    requirements:
       id: \d+

user_join_community:
    path: /community/join/{id}
    defaults: { _controller: NetworkUserBundle:Community:joinCommunity }
    requirements:
       id: \d+

user_invite_friend:
    path: /community{communityId}/invite/{id}
    defaults: { _controller: NetworkUserBundle:Community:inviteCommunity }
    requirements:
       id: \d+
       communityId: \d+

user_exclude_participant:
    path: /community{communityId}/exclude/{id}
    defaults: { _controller: NetworkUserBundle:Community:excludeCommunity }
    requirements:
       id: \d+
       communityId: \d+

user_accept_request:
    path: /community{communityId}/accept_request/{id}
    defaults: { _controller: NetworkUserBundle:Community:acceptRequestCommunity }
    requirements:
       id: \d+
       communityId: \d+
user_reject_request:
    path: /community{communityId}/reject_request/{id}
    defaults: { _controller: NetworkUserBundle:Community:rejectRequestCommunity}
    requirements:
       id: \d+
       communityId: \d+

user_uninvite_community:
    path: /community{communityId}/uninvite_community/{id}
    defaults: { _controller: NetworkUserBundle:Community:uninviteCommunity}
    requirements:
       id: \d+
       communityId: \d+

user_cancel_request_community:
    path: /community{communityId}/cancel_request_community/{id}
    defaults: { _controller: NetworkUserBundle:Community:cancelRequestCommunity}
    requirements:
       id: \d+
       communityId: \d+
       
user_delete_community:
    path: /community/delete/{id}
    defaults: { _controller: NetworkUserBundle:Community:deleteCommunity}
    requirements:
       id: \d+
       
user_search_community:
    path: /search_community/
    defaults: { _controller: NetworkUserBundle:Community:searchCommunity}
    requirements: { _method: GET,_method: POST}

get_friends:
    path: /api/friends
    defaults: { _controller: NetworkUserBundle:Profile:getFriendsJson }

read_posts:
    path: /api/read_posts
    defaults: { _controller: NetworkUserBundle:Profile:readPosts }
